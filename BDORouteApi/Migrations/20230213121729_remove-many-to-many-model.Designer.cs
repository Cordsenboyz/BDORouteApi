// <auto-generated />
using System;
using BDORouteApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BDORouteApi.Migrations
{
    [DbContext(typeof(BDORouteApiDBContext))]
    [Migration("20230213121729_remove-many-to-many-model")]
    partial class removemanytomanymodel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BDORouteApi.Model.Mob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsElite")
                        .HasColumnType("bit");

                    b.Property<int>("MobTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrashDropRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MobTypeId");

                    b.ToTable("Mobs");
                });

            modelBuilder.Entity("BDORouteApi.Model.MobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MobTypes");
                });

            modelBuilder.Entity("BDORouteApi.Model.Mobinstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Lng")
                        .HasColumnType("float");

                    b.Property<int>("MobId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MobId");

                    b.ToTable("Mobinstances");
                });

            modelBuilder.Entity("BDORouteApi.Model.Pull", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Pulls");
                });

            modelBuilder.Entity("BDORouteApi.Model.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("MobinstancePull", b =>
                {
                    b.Property<int>("MobInstancesId")
                        .HasColumnType("int");

                    b.Property<int>("PullsId")
                        .HasColumnType("int");

                    b.HasKey("MobInstancesId", "PullsId");

                    b.HasIndex("PullsId");

                    b.ToTable("MobinstancePull");
                });

            modelBuilder.Entity("BDORouteApi.Model.Mob", b =>
                {
                    b.HasOne("BDORouteApi.Model.MobType", "MobType")
                        .WithMany()
                        .HasForeignKey("MobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MobType");
                });

            modelBuilder.Entity("BDORouteApi.Model.Mobinstance", b =>
                {
                    b.HasOne("BDORouteApi.Model.Mob", "Mob")
                        .WithMany()
                        .HasForeignKey("MobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mob");
                });

            modelBuilder.Entity("BDORouteApi.Model.Pull", b =>
                {
                    b.HasOne("BDORouteApi.Model.Route", null)
                        .WithMany("Pulls")
                        .HasForeignKey("RouteId");
                });

            modelBuilder.Entity("MobinstancePull", b =>
                {
                    b.HasOne("BDORouteApi.Model.Mobinstance", null)
                        .WithMany()
                        .HasForeignKey("MobInstancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDORouteApi.Model.Pull", null)
                        .WithMany()
                        .HasForeignKey("PullsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BDORouteApi.Model.Route", b =>
                {
                    b.Navigation("Pulls");
                });
#pragma warning restore 612, 618
        }
    }
}
